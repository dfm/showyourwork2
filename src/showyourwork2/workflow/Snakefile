# NOTE: These imports will be available in *all* Snakefiles - be somewhat
# careful about what you include here has a result.
from functools import partial
from pathlib import Path

from showyourwork2 import paths, utils
from showyourwork2.paths import package_data

SYW__PROJECT_ROOT = paths.find_project_root()
workdir: SYW__PROJECT_ROOT

# Parse and validate the configuration; apply defaults
from showyourwork2.config import parse_config
config = parse_config(config)
del parse_config

# Extract some commonly used config values
SYW__DOCUMENTS = config.documents
SYW__REPO_PATHS = paths.repo()
SYW__WORK_PATHS = paths.work(working_directory=config.working_directory)

# This is used for printing the list of artifact names
_list_artifacts = ", ".join(map("'{}'".format, [a for doc in SYW__DOCUMENTS for a in doc.artifacts]))

rule all:
    message:
        f"Generating artifacts: {_list_artifacts}"
    input:
        [doc.artifacts for doc in SYW__DOCUMENTS]

del _list_artifacts

rule:
    name:
        utils.rule_name("save", "config")
    output:
        "config.json"
    run:
        with open(output[0], "w") as f:
            f.write(config.model_dump_json(indent=2))

# Include the rules from the main showyourwork workflow
include_rules = partial(package_data, "showyourwork2", "workflow", "rules")
include: include_rules("main.smk")
include: include_rules("dependencies.smk")
include: include_rules("static.smk")
include: include_rules("dynamic.smk")
include: include_rules("plugins.smk")

# Include the rules from any user-defined local Snakefiles
for snakefile in config.snakefiles:
    include: snakefile

# For backwards compatibility, we include the top-level project Snakefile if it
# exists
if (SYW__PROJECT_ROOT / "Snakefile").is_file():
    include: SYW__PROJECT_ROOT / "Snakefile"

# Handle the rule order for ambiguous rules
from showyourwork2.rule_order import fix_rule_order
fix_rule_order(config, workflow)
del fix_rule_order

# Patch the snakemake logger for our purposes
from showyourwork2.logging import patch_snakemake_logging
patch_snakemake_logging(config)
del patch_snakemake_logging
